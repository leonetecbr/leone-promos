{"version":3,"file":"/sw.js","mappings":"4OAAA,IAAIA,EAAkB,SAEtBC,KAAKC,iBAAiB,WAAW,SAACC,GAC9BA,EAAMC,UACFC,OAAOC,KAAKN,GAAiBO,MAAK,SAACC,GAC/B,OAAOA,EAAMC,OACT,CACI,kBACA,gBACA,6BACA,mBACA,wBACA,8BAOpBR,KAAKC,iBAAiB,YAAY,SAAAC,GAC9BA,EAAMC,UACFC,OAAOK,OAAOH,MAAK,SAAAI,GACf,OAAOC,QAAQC,IACXF,EACKG,QAAO,SAAAC,GAAS,OAAKA,EAAUC,WAAW,QAC1CF,QAAO,SAAAC,GAAS,OAAKA,IAAcf,KACnCiB,KAAI,SAAAF,GAAS,OAAIV,OAAM,OAAQU,cAMpDd,KAAKC,iBAAiB,SAAS,SAACC,GAC5BA,EAAMe,YACFb,OAAOc,MAAMhB,EAAMiB,SACdb,MAAK,SAACc,GACH,GAAIA,EACA,OAAOA,EAGX,IAAIC,EAAenB,EAAMiB,QAAQG,QAEjC,OAAOC,MAAMF,UAO7BrB,KAAKC,iBAAiB,QAAQ,SAACC,GAC3B,IAAMsB,EAAOtB,EAAMsB,KAAKC,OAClBC,EAAU,CACZC,KAAMH,EAAKI,IACXC,KAAM,eACNC,MAAO,eACPN,KAAM,CAAEO,IAAKP,EAAKQ,YAEEC,IAApB,EAAOT,EAAKU,OACZR,EAAQS,MAAQX,EAAKU,KAEzBhC,EAAMC,UAAUH,KAAKoC,aAAaC,iBAAiBb,EAAKc,MAAOZ,OAGnE1B,KAAKC,iBAAiB,qBAAqB,SAACC,GACxCA,EAAMqC,aAAaC,QACnBtC,EAAMC,UAAUsC,QAAQC,SAAS,CAC7BC,KAAM,WACPrC,MAAK,SAACsC,GACL,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAWE,OAAQD,IAAK,CACxC,IAAIE,EAASH,EAAWC,GACxB,GAAIE,EAAOhB,MAAQ7B,EAAMqC,aAAaf,KAAKO,KAAO,UAAWgB,EACzD,OAAOA,EAAOC,QAEtB,GAAIP,QAAQQ,WACR,OAAOR,QAAQQ,WAAW,+BAAiC/C,EAAMqC,aAAaf,KAAKO,a","sources":["webpack:///./resources/js/sw.js"],"sourcesContent":["let staticCacheName = 'v2.5.0'\r\n\r\nself.addEventListener('install', (event) => {\r\n    event.waitUntil(\r\n        caches.open(staticCacheName).then((cache) => {\r\n            return cache.addAll(\r\n                [\r\n                    'css/app.min.css',\r\n                    'js/app.min.js',\r\n                    'js/bootstrap.bundle.min.js',\r\n                    'js/jquery.min.js',\r\n                    'css/bootstrap.min.css',\r\n                    'json/manifest.json'\r\n                ]\r\n            )\r\n        })\r\n    )\r\n})\r\n\r\nself.addEventListener('activate', event => {\r\n    event.waitUntil(\r\n        caches.keys().then(cacheNames => {\r\n            return Promise.all(\r\n                cacheNames\r\n                    .filter(cacheName => (cacheName.startsWith('v')))\r\n                    .filter(cacheName => (cacheName !== staticCacheName))\r\n                    .map(cacheName => caches.delete(cacheName))\r\n            )\r\n        })\r\n    )\r\n})\r\n\r\nself.addEventListener('fetch', (event) => {\r\n    event.respondWith(\r\n        caches.match(event.request)\r\n            .then((response) => {\r\n                if (response) {\r\n                    return response\r\n                }\r\n\r\n                let fetchRequest = event.request.clone()\r\n\r\n                return fetch(fetchRequest)\r\n            })\r\n    )\r\n})\r\n\r\n'use strict'\r\n\r\nself.addEventListener('push', (event) => {\r\n    const data = event.data.json()\r\n    const options = {\r\n        body: data.msg,\r\n        icon: 'img/icon.png',\r\n        badge: 'img/icon.png',\r\n        data: { url: data.link }\r\n    }\r\n    if (typeof data.img !== undefined) {\r\n        options.image = data.img\r\n    }\r\n    event.waitUntil(self.registration.showNotification(data.title, options))\r\n})\r\n\r\nself.addEventListener('notificationclick', (event) => {\r\n    event.notification.close()\r\n    event.waitUntil(clients.matchAll({\r\n        type: 'window'\r\n    }).then((clientList) => {\r\n        for (let i = 0; i < clientList.length; i++) {\r\n            let client = clientList[i]\r\n            if (client.url === event.notification.data.url && 'focus' in client)\r\n                return client.focus()\r\n        }\r\n        if (clients.openWindow)\r\n            return clients.openWindow('https://ofertas.leone.tec.br' + event.notification.data.url)\r\n    }))\r\n})"],"names":["staticCacheName","self","addEventListener","event","waitUntil","caches","open","then","cache","addAll","keys","cacheNames","Promise","all","filter","cacheName","startsWith","map","respondWith","match","request","response","fetchRequest","clone","fetch","data","json","options","body","msg","icon","badge","url","link","undefined","img","image","registration","showNotification","title","notification","close","clients","matchAll","type","clientList","i","length","client","focus","openWindow"],"sourceRoot":""}